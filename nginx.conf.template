worker_processes auto;

user nobody nogroup;
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    access_log /var/log/nginx/access.log combined;
    sendfile on;

    upstream app_server {
        server app:5000 fail_timeout=0;
    }
    upstream ttyd_server {
        server ttyd:7681 fail_timeout=0;
    }
    upstream api_server {
        server ieuler-server:2718 fail_timeout=0;
    }

    ## redirect all traffic to https
    #server {
    #    listen 80 default_server;
    #    server_name _;
    #    return 301 https://$host$request_uri;
    #}

    server {
        listen 80 deferred;
        # listen 443 ssl;
        client_max_body_size 4G;

        server_name ${NGINX_HOST};

        ## uncomment for https (after obtaining valid .pem file below)
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #listen 443 ssl;
        #ssl_certificate /etc/nginx/fullchain.pem;
        #ssl_certificate_key /etc/nginx/privkey.pem;

        location /app {
            rewrite ^/app/?(.*)$ /$1 break;
            try_files $uri @proxy_to_ttyd;
        }
        location / {
            try_files $uri $uri/ @proxy_to_app;
        }
        location /api {
            try_files $uri $uri/ @proxy_to_api;
        }
        location /.well-known/acme-challenge/ {
            alias /var/tmp/.well-known/acme-challenge/;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }

        location @proxy_to_ttyd {
            # proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_pass http://ttyd_server;
        }

        location @proxy_to_api {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://api_server;
        }
    }
}